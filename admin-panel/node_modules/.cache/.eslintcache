[{"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\index.js":"1","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\reportWebVitals.js":"2","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\App.js":"3","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\login\\Login.jsx":"4","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\menu\\Menu.jsx":"5","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\reservations\\Reservations.jsx":"6","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\ReservationDetails\\Details.jsx":"7","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\main\\Main.jsx":"8","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\borrow\\Borrow.jsx":"9","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\user\\Users.jsx":"10","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\user\\EditUser.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2469,"mtime":1622554601152,"results":"15","hashOfConfig":"13"},{"size":2521,"mtime":1622554601172,"results":"16","hashOfConfig":"13"},{"size":2132,"mtime":1622554601173,"results":"17","hashOfConfig":"13"},{"size":4979,"mtime":1622571265417,"results":"18","hashOfConfig":"13"},{"size":4581,"mtime":1622571332168,"results":"19","hashOfConfig":"13"},{"size":778,"mtime":1622554601173,"results":"20","hashOfConfig":"13"},{"size":4531,"mtime":1622571265418,"results":"21","hashOfConfig":"13"},{"size":4775,"mtime":1622576164595,"results":"22","hashOfConfig":"13"},{"size":7272,"mtime":1622571263631,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jollvz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\index.js",[],["50","51"],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\reportWebVitals.js",[],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\App.js",[],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\login\\Login.jsx",[],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\menu\\Menu.jsx",["52"],"import React, { Component } from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nclass Menu extends Component {\r\n    state = {\r\n      login: false\r\n      }\r\n\r\n    logout = () =>{\r\n      alert(\"Logout successfully\");\r\n      this.props.clearToken();\r\n      this.setState({login: false})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark main-motive\" aria-label=\"Fifth navbar example\">\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">Library</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarsExample05\" aria-controls=\"navbarsExample05\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n             \r\n              <div className=\"collapse navbar-collapse justify-content-md-end\" id=\"navbarsExample05\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/users'>Users</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/borrow'>Borrow</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/reservations'>Reservations</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    {this.props.isLogin ? (\r\n                        <NavLink className=\"nav-link\" to='/' onClick={() => this.logout()}>Logout</NavLink>\r\n                    ):(\r\n                        <NavLink className=\"nav-link\" to='/login'>Login</NavLink>\r\n                    )}\r\n                   \r\n                    {/* <a className=\"nav-link\" href=\"/login\">Login</a> */}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(Menu);","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\reservations\\Reservations.jsx",["53"],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\ReservationDetails\\Details.jsx",[],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\main\\Main.jsx",["54","55"],"import React, { Component } from 'react';\nimport { NavLink} from 'react-router-dom';\n\nclass Main extends Component {\n    state = {  }\n    render() { \n        return ( \n            <section className=\"d-flex h-100 text-center\">\n                <div className=\"cover-container main-full-window d-flex flex-column \">\n                <main className=\"\">\n                    <h1>Administrator panel</h1>\n                    <p className=\"lead\">Welcome to PUZ-Library Administrator panel</p>\n                    <p className=\"lead\">\n                    <a href=\"#\" className=\"btn btn-lg btn-secondary fw-bold border-white bg-white\">Learn more</a>\n                    </p>\n                </main>\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default Main;","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\borrow\\Borrow.jsx",[],"D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\user\\Users.jsx",["56"],"import React, { Component } from 'react';\nimport { NavLink} from 'react-router-dom';\n\nclass Users extends Component {\n    state = {\n        users: [],\n        notFound: false,\n        username: \"\",\n        errorMessage: \"\",\n        page: 1\n     }\n\n    componentDidMount(){\n        this.fetchUsers(0, 25, this.state.username);\n    }\n     \n    fetchUsers = (page, limit, username) =>{\n        fetch(this.props.prefix + `/api/library/admins/users?page=${page}&limit=${limit}&username=${username}`, {\n        method: 'GET',\n        headers: {\"Content-Type\": \"application/json\", \"Authorization\": this.props.getToken()}\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.status === 404){\n                this.setState({notFound: true, errorMessage: res.message});\n            }\n            else if (res.status == 403){\n                this.setState({notFound: true, errorMessage: \"You have to login to administrator account to get access to this resource\"})\n            }\n            else{\n                this.setState({users: res, notFound: false})\n            }       \n        })\n  }\n\n  usernameHandler = (name) =>{\n    this.setState({username: name.target.value});\n}   \n\n  filterByUsername = (e) =>{\n    e.preventDefault();\n    this.fetchUsers(0, 20, this.state.username);\n  }\n\n    render() { \n        \n        const {users, notFound, errorMessage, page} = this.state;\n\n        if(!users.length && notFound===false){\n            return (<div>Loading...</div>)\n        }\n        else if(notFound === true){\n            return (\n                <section>\n                    {this.searchBar()}\n                    <div><b>{errorMessage}</b></div> \n                </section>\n            )\n        }\n        return ( \n            <section>\n            {this.searchBar()}           \n\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Username</th>\n                    <th scope=\"col\">Full name</th>\n                    <th scope=\"col\" >Address</th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Book limit</th>\n                    <th scope=\"col\">Warnings</th>\n                    <th scope=\"col\">Role</th>\n                    <th scope=\"col\">isBanned</th>\n                    <th scope=\"col\">Action</th>\n                    </tr>\n                </thead> \n            <tbody >\n            {this.state.users.map((user, index) =>{\n                return(\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{user.username}</td>\n                      <td>{user.firstName} {user.lastName}</td>\n                      <td ><span className=\"cutText address\">{user.address}</span></td>\n                      <td>{user.phone}</td>\n                      <td>{user.email}</td>\n                      <td>{user.maxBooks}</td>\n                      <td>{user.warnings}</td>\n                      <td>{user.role}</td>\n                      <td>{user.banned? \"Yes\" : \"No\"}</td>\n                      <td><NavLink className=\"btn btn-success\" to={{pathname: `/users/${user.id}`, query: {id: user.id}}}>Edit</NavLink></td>\n                    </tr>             \n                )\n            })}\n\n            </tbody>\n            </table>\n\n            <div >\n            <ul className=\"pagination justify-content-center\">\n                <li className=\"page-item disabled\">\n                    <button className=\"page-link\" aria-disabled=\"true\">Previous</button>\n                </li>\n                <li class=\"page-item\"><span className=\"page-link\">{page}</span></li>\n                <li className=\"page-item \">\n                    <button className=\"page-link\" aria-disabled=\"true\">Next</button>\n                </li>\n            </ul>\n            </div>\n\n            </section>\n         );\n    }\n\n    searchBar(){\n        return(\n            <form className=\"d-flex justify-content-center mb-5\" onClick={this.filterByUsername}>\n                <div className=\"col-auto\">\n                    <p className=\"center-text mx-5\">Find by username</p>\n                </div>\n                <div className=\"col-auto\">\n                    <label className=\"visually-hidden\">Username</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"username\" value={this.state.username} onChange={this.usernameHandler}/>\n                </div>\n                <div className=\"col-auto\">\n                    <button type=\"submit\"   className=\"btn btn-primary mb-3 mx-3\" >Filter</button>\n                </div>\n            </form>\n        )\n    }\n}\n \nexport default Users;","D:\\Language\\Studia\\Biblioteka2.0\\library-admin-panel\\admin-panel\\src\\components\\user\\EditUser.jsx",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":15,"nodeType":"66","endLine":19,"endColumn":52},{"ruleId":"67","severity":1,"message":"68","line":87,"column":54,"nodeType":"69","messageId":"70","endLine":87,"endColumn":58},{"ruleId":"67","severity":1,"message":"71","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":14,"column":21,"nodeType":"66","endLine":14,"endColumn":100},{"ruleId":"72","severity":1,"message":"73","line":27,"column":33,"nodeType":"74","messageId":"75","endLine":27,"endColumn":35},{"ruleId":"67","severity":1,"message":"71","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":155,"column":33,"nodeType":"66","endLine":155,"endColumn":71},{"ruleId":"64","severity":1,"message":"65","line":156,"column":33,"nodeType":"66","endLine":156,"endColumn":71},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]