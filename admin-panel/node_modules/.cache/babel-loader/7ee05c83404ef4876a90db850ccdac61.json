{"ast":null,"code":"var _jsxFileName = \"/home/szymon/College/PUZ-Biblioteka/Admin-Panel/admin-panel/admin-panel/src/components/ReservationDetails/Details.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      ready: false,\n      notFound: false,\n      errorMessage: \"\",\n      reservation: null,\n      user: null\n    };\n\n    this.fetchReservation = id => {\n      fetch(this.props.prefix + `/api/library/admins/reservations/${id}`, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": this.props.token\n        }\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n\n        if (res.status === 404) {\n          this.setState({\n            notFound: true,\n            errorMessage: res.message\n          });\n        } else {\n          this.fetchUser(res.userId);\n          this.setState({\n            reservation: res,\n            notFound: false\n          });\n        }\n      });\n    };\n\n    this.fetchUser = id => {\n      fetch(this.props.prefix + `/api/library/admins/users/${id}`, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": this.props.token\n        }\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n\n        if (res.status === 404) {\n          this.setState({\n            notFound: true,\n            errorMessage: res.message\n          });\n        } else {\n          this.setState({\n            user: res,\n            notFound: false,\n            ready: true\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const url = this.props.location.pathname;\n    const array = url.split('/');\n    const _id = array[array.length - 1];\n    this.fetchReservation(_id);\n    this.setState({\n      id: _id\n    });\n  }\n\n  render() {\n    const {\n      reservation,\n      user,\n      notFound,\n      errorMessage\n    } = this.state;\n\n    if ((reservation === null || user === null) && notFound === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this);\n    } else if (notFound === true) {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\" \", reservation.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-subtitle mb-2 text-muted\",\n          children: [\"Reservation ID: #\", reservation.id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 54\n          }, this), reservation.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Full name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 54\n          }, this), \" \", user.firstName, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 54\n          }, this), user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Phone: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 54\n          }, this), user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Issue date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 54\n          }, this), Moment(reservation.dateReservation).format('YYYY-MM-DD')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: () => this.confirmReservation(reservation.id),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning ms-2\",\n          onClick: () => this.cancelReservation(reservation.id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Details);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/szymon/College/PUZ-Biblioteka/Admin-Panel/admin-panel/admin-panel/src/components/ReservationDetails/Details.jsx"],"names":["React","Component","withRouter","Moment","Details","state","id","ready","notFound","errorMessage","reservation","user","fetchReservation","fetch","props","prefix","method","headers","token","then","res","json","console","log","status","setState","message","fetchUser","userId","componentDidMount","url","location","pathname","array","split","_id","length","render","title","username","firstName","lastName","email","phone","dateReservation","format","confirmReservation","cancelReservation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Moment from 'moment';\n\nclass Details extends Component {\n    state = { \n        id: 0,\n        ready: false,\n        notFound: false,\n        errorMessage: \"\",\n        reservation: null,\n        user: null\n     }\n\n     componentDidMount(){\n        const url = this.props.location.pathname;\n        const array = url.split('/');\n        const _id = array[array.length-1];\n\n        this.fetchReservation(_id);\n        \n        this.setState({id: _id});\n\n     }\n\n\n  fetchReservation = (id) =>{\n    fetch(this.props.prefix + `/api/library/admins/reservations/${id}`, {\n       method: 'GET',\n       headers: {\"Content-Type\": \"application/json\", \"Authorization\": this.props.token}\n      })\n    .then(res => res.json())\n    .then(res => {\n        console.log(res)\n        if(res.status === 404){\n            this.setState({notFound: true, errorMessage: res.message});\n        }\n        else{\n            this.fetchUser(res.userId);\n            this.setState({reservation: res, notFound: false})\n        }       \n    })\n  }\n\n  fetchUser= (id) =>{\n    fetch(this.props.prefix + `/api/library/admins/users/${id}`, {\n       method: 'GET',\n       headers: {\"Content-Type\": \"application/json\", \"Authorization\": this.props.token}\n      })\n    .then(res => res.json())\n    .then(res => {\n        console.log(res)\n        if(res.status === 404){\n            this.setState({notFound: true, errorMessage: res.message});\n        }\n        else{\n            this.setState({user: res, notFound: false, ready: true})\n        }       \n    })\n  }\n\n    render() { \n        const {reservation, user, notFound, errorMessage} = this.state;\n        if((reservation === null || user === null) && notFound===false){\n            return (<div>Loading...</div>)\n        }\n        else if(notFound === true){\n            return (\n                <section>\n                    <div><b>{errorMessage}</b></div> \n                </section>\n            )\n        }\n            return ( \n                <section>         \n                    <div className=\"card-body\">\n                            <h5 className=\"card-title\"> {reservation.title}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Reservation ID: #{reservation.id} </h6>\n                            <p className=\"card-text\"><b>Username: </b>{reservation.username}</p>\n                            <p className=\"card-text\"><b>Full name:</b> {user.firstName} {user.lastName}</p>\n                            <p className=\"card-text\"><b>Email: </b>{user.email}</p>\n                            <p className=\"card-text\"><b>Phone: </b>{user.phone}</p>\n                            <p className=\"card-text\"><b>Issue date: </b>{Moment(reservation.dateReservation).format('YYYY-MM-DD')}</p>\n                            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.confirmReservation(reservation.id)}>Confirm</button>\n                            <button type=\"button\" className=\"btn btn-warning ms-2\" onClick={() => this.cancelReservation(reservation.id)}>Cancel</button>\n                        </div>\n                </section>\n            );\n    }\n}\n \nexport default withRouter(Details);"]},"metadata":{},"sourceType":"module"}